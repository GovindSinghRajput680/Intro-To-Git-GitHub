# Configuring git
    Open git bash
    git config --global user.name "GOVINDSINGHRAJPUT680"
    git config --global user.email "govind.singh.23063@iitgoa.ac.in"
    git config --list (for verifying)

# Clone of a Repo("Means GitHub Repo to local Repo")
    git clone <past the link>

# Imp Cammands
    pwd- current directory
    cd child directory name - move to child directory
    ls- list all files
    git --version -> get the version
    cd .. -> parent directory
    ls -Hidden- to view hidden files
    clear -It will clear the terminal
    git init - to make a normal repo to git repo on our local machine
# a change is three steps process :
    git add . -> Add all the changes but change will not be updated on GitHub
    or for adding a single file=>  git add .\index.html   (now it has reached to staged state)
    //next step is to commit
    git commit -m "message you want to display
    //now we want to display these changes on GitHub so we need to use this
    git push origin main - pushing changes to GitHub.


# Making a new directory (Local to Remote)
    mkdir Directory name
    git init
    copy the link of repo from GitHub
    git remote add origin <past the link>
    git remote -v ->For verfying
    git push origin main ->Pushing to GitHub

# Handling with Branches
    git branch  (to check out branch)
    git branch -M main (to  change the name)
    git checkout <branch name > (to navigate in that branch)
    git checkout -b <new branch name> (to create a new branch)
    git branch -d <Branch name> (to delet a branch) * we can delet a branch if we are currently in the same branch
    git diff <Branch name> (It will comapre two branches and tell you the difference)
    git merge <Branch name> or by GitHub pull request then U have to use git pull origin <branch name>

# Undoing changes
    * staged changes:(aise change jinko humne add kr diya pr commit nhi kiya)
        git reset <file name>  - to unadded
        git reset (it will reset all files) -to unadded
    *commited changes:
        git reset Head~1  -> It will move you one step back to last commit

    *Commited changes for many commit:
        git log -> veiw hashes and copy the specific link.
        git reset <commithash(means past the hash link)> 
        git reset --hard<past the hash> (it will also update in the local repo)

# Fork is a rough copy

#git status
untracked -> files which we have added and git don't know anything about these
Modifies -> tracked files which we have modified





    
